{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "title": "NetDoop API",
        "contact": {},
        "version": "1.0"
    },
    "host": "dev.netdoop.com",
    "basePath": "/api/v1",
    "paths": {
        "/auth": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate a user",
                "parameters": [
                    {
                        "description": "Authenticate request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/iam.authBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a login token",
                        "schema": {
                            "$ref": "#/definitions/iam.authResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/iam/audit-logs": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuditLogs"
                ],
                "summary": "List audit logs",
                "operationId": "list-audit-logs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Sort order",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/iam.listAuditLogsData"
                        },
                        "headers": {
                            "X-Total": {
                                "type": "int",
                                "description": "Total number"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/iam/audit-logs/{ts}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuditLogs"
                ],
                "summary": "Get audit log",
                "operationId": "get-audit-log",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Timestamp",
                        "name": "ts",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/iam.AuditLog"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/iam/current": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Current"
                ],
                "summary": "Get current user information",
                "operationId": "get-current",
                "responses": {
                    "200": {
                        "description": "User information",
                        "schema": {
                            "$ref": "#/definitions/iam.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/iam/current/change-password": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Current"
                ],
                "summary": "Change current user password",
                "operationId": "change-current-password",
                "parameters": [
                    {
                        "description": "Change password request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/iam.changePasswordBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password changed successfully"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/iam/roles": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "List roles",
                "operationId": "list-roles",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Sort order",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/iam.listRolesData"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Create a role",
                "operationId": "create-role",
                "parameters": [
                    {
                        "description": "Create Role Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/iam.createRoleBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/iam.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/iam/roles/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Get role",
                "operationId": "get-role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/iam.Role"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Update role",
                "operationId": "update-role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Role Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/iam.updateRoleBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/iam.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Delete role",
                "operationId": "delete-role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/iam/roles/{id}/disable": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Set role disable",
                "operationId": "set-role-disable",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/iam.Role"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/iam/roles/{id}/enable": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Set role enable",
                "operationId": "set-role-enable",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/iam.Role"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/iam/roles/{id}/rules": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Set rules for role",
                "operationId": "set-role-rules",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "rules to set",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/iam.setRoleApiRulesBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/iam.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/iam/rules": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Rules"
                ],
                "summary": "List rules",
                "operationId": "list-rules",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/iam.listRulesBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/iam/users": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "List users",
                "operationId": "list-users",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Sort order",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/iam.listUsersData"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create user",
                "operationId": "create-user",
                "parameters": [
                    {
                        "description": "User",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/iam.createUserBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/iam.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request: invalid input parameter",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/iam/users/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user",
                "operationId": "get-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/iam.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "operationId": "update-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/iam.updateUserBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/iam.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request: invalid input parameter",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "operationId": "delete-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/iam/users/{id}/change-password": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Change user password",
                "operationId": "change-user-password",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Change password request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/iam.changePasswordBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/iam.User"
                        }
                    },
                    "400": {
                        "description": "Invalid input parameter",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/iam/users/{id}/disable": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Set user disable",
                "operationId": "set-user-disable",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/iam.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/iam/users/{id}/enable": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Set user enable",
                "operationId": "set-user-enable",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/iam.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/iam/users/{id}/reset-password": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Reset user password",
                "operationId": "reset-user-password",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/echo.Map"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/iam/users/{id}/roles": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get roles for user",
                "operationId": "get-user-roles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Set roles for user",
                "operationId": "set-user-roles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Roles to set",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/iam.setUserRoles"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/iam.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Add roles for user",
                "operationId": "add-user-roles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Roles to add",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/iam.addUserRolesBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/iam.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/data": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Data"
                ],
                "summary": "Query data series",
                "operationId": "query-data",
                "parameters": [
                    {
                        "description": "Query Command",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tsdb.TSQueryCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tsdb.TSResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/datamodels": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC DataModel"
                ],
                "summary": "List data models",
                "operationId": "list-datamodels",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Sort order",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.listDataModelData"
                        },
                        "headers": {
                            "X-Total": {
                                "type": "int",
                                "description": "Total number"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC DataModel"
                ],
                "summary": "Create data model",
                "operationId": "create-datamodel",
                "parameters": [
                    {
                        "description": "DataModel",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.createDataModelBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.DataModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request: invalid input parameter",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/datamodels/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC DataModel"
                ],
                "summary": "Get data model",
                "operationId": "get-datamodel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.DataModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "OMC DataModel"
                ],
                "summary": "Delete data model",
                "operationId": "delete-datamodel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/datamodels/{id}/parameter/{parameter_id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "OMC DataModel Parameter"
                ],
                "summary": "Delete data model parameter",
                "operationId": "delete-datamodel-parameter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Parameter ID",
                        "name": "parameter_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/datamodels/{id}/parameters": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC DataModel"
                ],
                "summary": "List the parameters of a datamodel",
                "operationId": "list-datamodel-parameters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.ParameterValues"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC DataModel Parameter"
                ],
                "summary": "Create data model parameter",
                "operationId": "create-datamodel-parameter",
                "parameters": [
                    {
                        "description": "DataModelParameter",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.createDataModelParameterBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.DataModelParameter"
                        }
                    },
                    "400": {
                        "description": "Bad Request: invalid input parameter",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/datamodels/{id}/parameters/{parameter_id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC DataModel Parameter"
                ],
                "summary": "Get data model parameter",
                "operationId": "get-datamodel-parameter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Parameter ID",
                        "name": "parameter_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.DataModelParameter"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/datamodels/{id}/template/{template_id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "OMC DataModel Template"
                ],
                "summary": "Delete data model template",
                "operationId": "delete-datamodel-template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "TemplateID",
                        "name": "template_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/datamodels/{id}/templates": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC DataModel"
                ],
                "summary": "List the templates of a datamodel",
                "operationId": "list-datamodel-templates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.ParameterValues"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC DataModel Template"
                ],
                "summary": "Create data model template",
                "operationId": "create-datamodel-template",
                "parameters": [
                    {
                        "description": "DataModelTemplate",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.createDataModelTemplateBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.DataModelTemplate"
                        }
                    },
                    "400": {
                        "description": "Bad Request: invalid input template",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/datamodels/{id}/templates/{template_id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC DataModel Template"
                ],
                "summary": "Get data model template",
                "operationId": "get-datamodel-template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "TemplateID",
                        "name": "template_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.DataModelTemplate"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/deleted-devices": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Deleted Devices"
                ],
                "summary": "List deleted devices",
                "operationId": "list-deleted-devices",
                "parameters": [
                    {
                        "type": "string",
                        "default": "",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Sort order",
                        "name": "order_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.listDeletedDevicesData"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/deleted-devices/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Deleted Devices"
                ],
                "summary": "Delete a device permanently",
                "operationId": "delete-deleted-device",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/deleted-devices/{id}/recover": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Deleted Devices"
                ],
                "summary": "Recover a deleted device",
                "operationId": "recover-deleted-device",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/deleted-products": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Deleted Products"
                ],
                "summary": "List deleted products",
                "operationId": "list-deleted-products",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Sort order",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.listDeletedProductsData"
                        },
                        "headers": {
                            "X-Total": {
                                "type": "int",
                                "description": "Total number"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/deleted-products/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "OMC Deleted Products"
                ],
                "summary": "Delete deleted product",
                "operationId": "delete-deleted-product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/device-alarms": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Device Alarms("
                ],
                "summary": "List device alarms",
                "operationId": "list-device-alarms",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Sort order",
                        "name": "order_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.listDeviceAlarmsData"
                        },
                        "headers": {
                            "X-Total": {
                                "type": "int",
                                "description": "Total number"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/device-alarms/{ts}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Device Alarms"
                ],
                "summary": "Get device alarm",
                "operationId": "get-device-alarm",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Timestamp",
                        "name": "ts",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.DeviceAlarm"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/device-events": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC DeviceEvents"
                ],
                "summary": "List device events",
                "operationId": "list-device-events",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Sort order",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.listDeviceEventsData"
                        },
                        "headers": {
                            "X-Total": {
                                "type": "int",
                                "description": "Total number"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/device-events/{ts}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC DeviceEvents"
                ],
                "summary": "Get device event",
                "operationId": "get-device-event",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Timestamp",
                        "name": "ts",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.DeviceEvent"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/device-logs": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC TaskDeviceLogs"
                ],
                "summary": "List log device logs",
                "operationId": "list-device-logs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Sort order",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.listTaskDeviceLogsData"
                        },
                        "headers": {
                            "X-Total": {
                                "type": "int",
                                "description": "Total number"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/device-logs/{ts}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC TaskDeviceLogs"
                ],
                "summary": "Get log device log",
                "operationId": "get-device-log",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Timestamp",
                        "name": "ts",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.TaskDeviceLog"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/device-method-calls": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Device MethodCalls"
                ],
                "summary": "List device method calls",
                "operationId": "list-device-method-calls",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Sort order",
                        "name": "order_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.listDeviceMethodCallsData"
                        },
                        "headers": {
                            "X-Total": {
                                "type": "int",
                                "description": "Total number"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/device-method-calls/{ts}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Device MethodCalls"
                ],
                "summary": "Get device method call",
                "operationId": "get-device-method-call",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Timestamp",
                        "name": "ts",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.DeviceMethodCall"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/devices": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Devices"
                ],
                "summary": "List devices",
                "operationId": "list-devices",
                "parameters": [
                    {
                        "type": "string",
                        "default": "",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Sort order",
                        "name": "order_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.listDevicesData"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Devices"
                ],
                "summary": "Create a device",
                "operationId": "create-device",
                "parameters": [
                    {
                        "description": "Device",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.createDeviceBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request: invalid input parameter",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found: invalid product",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/devices/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Devices"
                ],
                "summary": "Get a device",
                "operationId": "get-device",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.Device"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Devices"
                ],
                "summary": "Update device info",
                "operationId": "update-device-info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Device",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.updateDeviceInfoBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request: invalid input parameter",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Devices"
                ],
                "summary": "Delete a device",
                "operationId": "delete-device",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/devices/{id}/add-device-object": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Devices"
                ],
                "summary": "Add object of a device",
                "operationId": "add-device-object",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.addDeviceObejectBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.DeviceMethodCall"
                        }
                    },
                    "400": {
                        "description": "BadRequest",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/devices/{id}/delete-device-object": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Devices"
                ],
                "summary": "Delete object of a device",
                "operationId": "delete-device-object",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.deleteDeviceObejectBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.DeviceMethodCall"
                        }
                    },
                    "400": {
                        "description": "BadRequest",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/devices/{id}/disable": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Devices"
                ],
                "summary": "Set a device disable",
                "operationId": "set-device-disable",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/echo.Map"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/devices/{id}/enable": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Devices"
                ],
                "summary": "Set a device enable",
                "operationId": "set-device-enable",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/echo.Map"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/devices/{id}/get-parameter-names": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Devices"
                ],
                "summary": "Get parameter names of a device",
                "operationId": "get-device-parameter-names",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.getDeviceParameterNamesBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.DeviceMethodCall"
                        }
                    },
                    "400": {
                        "description": "BadRequest",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/devices/{id}/get-parameter-values": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Devices"
                ],
                "summary": "Get parameter values of a device",
                "operationId": "get-device-parameter-values",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.getDeviceParameterValuesBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.DeviceMethodCall"
                        }
                    },
                    "400": {
                        "description": "BadRequest",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/devices/{id}/group": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "OMC Devices"
                ],
                "summary": "Set group for device",
                "operationId": "set-group-for-device",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Group ID",
                        "name": "group_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.setGroupForDeviceBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/devices/{id}/methods": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Devices"
                ],
                "summary": "Get the methods of a device",
                "operationId": "list-device-methods",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/devices/{id}/parameters": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Devices"
                ],
                "summary": "Get the parameters of a device",
                "operationId": "list-device-parameters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.ParameterValues"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/devices/{id}/perf-disable": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Devices"
                ],
                "summary": "Set a device perf disable",
                "operationId": "set-device-perf-disable",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/echo.Map"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/devices/{id}/perf-enable": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Devices"
                ],
                "summary": "Set a device perf enable",
                "operationId": "set-device-perf-enable",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/echo.Map"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/devices/{id}/reboot": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Devices"
                ],
                "summary": "Reboot a device",
                "operationId": "reboot-device",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.DeviceMethodCall"
                        }
                    },
                    "400": {
                        "description": "BadRequest",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/devices/{id}/set-parameter-values": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Devices"
                ],
                "summary": "Set parameter values of a device",
                "operationId": "set-device-parameter-values",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.setDeviceParameterValuesBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.DeviceMethodCall"
                        }
                    },
                    "400": {
                        "description": "BadRequest",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/devices/{id}/upgrade": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Devices"
                ],
                "summary": "Upgrade device",
                "operationId": "ugrade-device",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.upgradeDeviceBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.DeviceMethodCall"
                        }
                    },
                    "400": {
                        "description": "BadRequest",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/devices/{id}/upload-file": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Devices"
                ],
                "summary": "Upload file of device",
                "operationId": "upload-device-file",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.uploadDeviceFileBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.DeviceMethodCall"
                        }
                    },
                    "400": {
                        "description": "BadRequest",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/firmwares": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Firmwares"
                ],
                "summary": "List firmwares",
                "operationId": "list-firmwares",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Sort order",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.listFirmwaresData"
                        },
                        "headers": {
                            "X-Total": {
                                "type": "int",
                                "description": "Total number"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Firmwares"
                ],
                "summary": "Create firmware",
                "operationId": "create-firmware",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Version",
                        "name": "Version",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ProductType",
                        "name": "ProductType",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Product list",
                        "name": "Products",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Firmware file to upload",
                        "name": "File",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.Firmware"
                        }
                    },
                    "400": {
                        "description": "Bad Request: invalid input parameter",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/firmwares/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Firmwares"
                ],
                "summary": "Get firmware",
                "operationId": "get-firmware",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Firmware ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.Firmware"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OMC Firmwares"
                ],
                "summary": "Delete firmware",
                "operationId": "delete-firmware",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Firmware ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/firmwares/{id}/products": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Firmwares"
                ],
                "summary": "Set firmware products",
                "operationId": "set-firmware-products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.setFirmwareProductsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request: invalid input parameter",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/groups": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "OMC Groups"
                ],
                "summary": "List child groups",
                "operationId": "list-groups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/omc.Group"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "OMC Groups"
                ],
                "summary": "Create a group",
                "operationId": "create-group",
                "parameters": [
                    {
                        "description": "Create Group Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.createGroupBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.Group"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/groups/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "OMC Groups"
                ],
                "summary": "Get group details",
                "operationId": "get-group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.Group"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "OMC Groups"
                ],
                "summary": "Update group information",
                "operationId": "update-group-info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Group Info Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.updateGroupInfoBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.Group"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "OMC Groups"
                ],
                "summary": "Delete a group",
                "operationId": "delete-group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/groups/{id}/children": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "OMC Groups"
                ],
                "summary": "Get child groups",
                "operationId": "get-group-children",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/omc.Group"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/groups/{id}/parent": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "OMC Groups"
                ],
                "summary": "Set group parent",
                "operationId": "set-group-parent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Set Group Parent Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.setGroupParentBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.Group"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/kpi/measures": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC KPI"
                ],
                "summary": "List kpi measures",
                "operationId": "list-kpi-measures",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Sort order",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.listKPIMeasuresData"
                        },
                        "headers": {
                            "X-Total": {
                                "type": "int",
                                "description": "Total number"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC KPI"
                ],
                "summary": "Create kpi measure",
                "operationId": "create-kpi-measure",
                "parameters": [
                    {
                        "description": "KPIMeas",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.createKPIMeasureBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.KPIMeas"
                        }
                    },
                    "400": {
                        "description": "Bad Request: invalid input parameter",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/kpi/measures/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC KPI"
                ],
                "summary": "Get kpi measure",
                "operationId": "get-kpi-measure",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.KPIMeas"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC KPI"
                ],
                "summary": "Update kpi measure info",
                "operationId": "update-kpi-measure-info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "KPIMeas",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.updateKPIMeasureInfoBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.KPIMeas"
                        }
                    },
                    "400": {
                        "description": "Bad Request: invalid input parameter",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "OMC KPI"
                ],
                "summary": "Delete kpi measure",
                "operationId": "delete-kpi-measure",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/kpi/measures/{id}/disable": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "OMC KPI"
                ],
                "summary": "Set kpi measure disable",
                "operationId": "set-kpi-measure-disable",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.KPIMeas"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/kpi/measures/{id}/enable": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "OMC KPI"
                ],
                "summary": "Set kpi measure enable",
                "operationId": "set-kpi-measure-enable",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.KPIMeas"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/kpi/templates": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC KPI"
                ],
                "summary": "List kpi templates",
                "operationId": "list-kpi-templates",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Sort order",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.listKPITemplatesData"
                        },
                        "headers": {
                            "X-Total": {
                                "type": "int",
                                "description": "Total number"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC KPI"
                ],
                "summary": "Create kpi template",
                "operationId": "create-kpi-template",
                "parameters": [
                    {
                        "description": "KPITemplate",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.createKPITemplateBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.KPITemplate"
                        }
                    },
                    "400": {
                        "description": "Bad Request: invalid input parameter",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/kpi/templates/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC KPI"
                ],
                "summary": "Get kpi template",
                "operationId": "get-kpi-template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.KPITemplate"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC KPI"
                ],
                "summary": "Update kpi template",
                "operationId": "update-kpi-template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "KPITemplate",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.updateKPITemplateBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.KPITemplate"
                        }
                    },
                    "400": {
                        "description": "Bad Request: invalid input parameter",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "OMC KPI"
                ],
                "summary": "Delete kpi template",
                "operationId": "delete-kpi-template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/kpi/templates/{id}/records": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC KPI"
                ],
                "summary": "List kpi template records",
                "operationId": "list-kpi-template-records",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Sort order",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.listKPITemplateRecordsData"
                        },
                        "headers": {
                            "X-Total": {
                                "type": "int",
                                "description": "Total number"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/products": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Products"
                ],
                "summary": "List products",
                "operationId": "list-products",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Sort order",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.listProductsData"
                        },
                        "headers": {
                            "X-Total": {
                                "type": "int",
                                "description": "Total number"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Products"
                ],
                "summary": "Create product",
                "operationId": "create-product",
                "parameters": [
                    {
                        "description": "Product",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.createProductBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request: invalid input parameter",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/products/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Products"
                ],
                "summary": "Get product",
                "operationId": "get-product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.Product"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Products"
                ],
                "summary": "Update product info",
                "operationId": "update-product-info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.updateProductInfoBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request: invalid input parameter",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "OMC Products"
                ],
                "summary": "Delete product",
                "operationId": "delete-product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/products/{id}/disable": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "OMC Products"
                ],
                "summary": "Set product disable",
                "operationId": "set-product-disable",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.Product"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/products/{id}/enable": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "OMC Products"
                ],
                "summary": "Set product enable",
                "operationId": "set-product-enable",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.Product"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/products/{id}/firmwares": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Products"
                ],
                "summary": "List product firmwares",
                "operationId": "list-product-firmwares",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Firmwares",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/omc.Firmware"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/tasks": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Tasks"
                ],
                "summary": "List tasks",
                "operationId": "list-tasks",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Sort order",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.listTasksData"
                        },
                        "headers": {
                            "X-Total": {
                                "type": "int",
                                "description": "Total number"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Tasks"
                ],
                "summary": "Create task",
                "operationId": "create-task",
                "parameters": [
                    {
                        "description": "Task",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/omc.createTaskBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.Task"
                        }
                    },
                    "400": {
                        "description": "Bad Request: invalid input parameter",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/tasks/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Tasks"
                ],
                "summary": "Get task",
                "operationId": "get-task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.Task"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "OMC Tasks"
                ],
                "summary": "Delete task",
                "operationId": "delete-task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/transfer-logs": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Device Transfer Logs"
                ],
                "summary": "List transfer logs",
                "operationId": "list-device-transfer-logs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Sort order",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.listDeviceTransferLogsData"
                        },
                        "headers": {
                            "X-Total": {
                                "type": "int",
                                "description": "Total number"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/omc/transfer-logs/{ts}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OMC Device Transfer Logs"
                ],
                "summary": "Get device transfer log",
                "operationId": "get-device-transfer-log",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Timestamp",
                        "name": "ts",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/omc.DeviceTransferLog"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OMC Device Transfer Logs"
                ],
                "summary": "Delete device transfer log",
                "operationId": "delete-device-transfer-log",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Timestamp",
                        "name": "ts",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/routes": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "System"
                ],
                "summary": "List routes",
                "operationId": "list-routes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.listRoutesBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/s3/objects": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Objects"
                ],
                "summary": "List objects",
                "operationId": "list-objects",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Sort order",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of objects",
                        "schema": {
                            "$ref": "#/definitions/s3.listS3ObjectsData"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/s3/objects/{bucket}/{key}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Objects"
                ],
                "summary": "Download an object from S3",
                "operationId": "download-object",
                "parameters": [
                    {
                        "type": "string",
                        "default": "",
                        "description": "S3 objet bucket",
                        "name": "bucket",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "S3 object key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token for the object",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empty response"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Objects"
                ],
                "summary": "Put an object to S3",
                "operationId": "put-object",
                "parameters": [
                    {
                        "type": "string",
                        "default": "",
                        "description": "S3 objet bucket",
                        "name": "bucket",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "S3 object key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object information",
                        "schema": {
                            "$ref": "#/definitions/s3.S3Object"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Objects"
                ],
                "summary": "Delete an object from S3",
                "operationId": "delete-object",
                "parameters": [
                    {
                        "type": "string",
                        "default": "",
                        "description": "S3 objet bucket",
                        "name": "bucket",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "S3 object key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/s3/objects/{bucket}/{key}/info": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Objects"
                ],
                "summary": "Get information for an object from S3",
                "operationId": "get-object-info",
                "parameters": [
                    {
                        "type": "string",
                        "default": "",
                        "description": "S3 objet bucket",
                        "name": "bucket",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "S3 object key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object information",
                        "schema": {
                            "$ref": "#/definitions/s3.S3Object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/system/info": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Get information of system",
                "operationId": "get-system-info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/system.systemInfoData"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/system/time": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Get current time of system",
                "operationId": "get-system-time",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/system.systemTimeData"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "echo.HTTPError": {
            "type": "object",
            "properties": {
                "message": {}
            }
        },
        "echo.Map": {
            "type": "object",
            "additionalProperties": true
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "iam.ApiRule": {
            "type": "object",
            "properties": {
                "Method": {
                    "type": "string"
                },
                "Path": {
                    "type": "string"
                }
            }
        },
        "iam.AuditLog": {
            "type": "object",
            "properties": {
                "ApiName": {
                    "type": "string"
                },
                "MetaData": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "Method": {
                    "type": "string"
                },
                "Path": {
                    "type": "string"
                },
                "Schema": {
                    "type": "string"
                },
                "Status": {
                    "type": "integer"
                },
                "Time": {
                    "type": "string"
                },
                "Updated": {
                    "type": "string"
                },
                "User": {
                    "$ref": "#/definitions/iam.User"
                },
                "UserAlias": {
                    "type": "string"
                },
                "UserId": {
                    "type": "integer"
                },
                "UserName": {
                    "type": "string"
                }
            }
        },
        "iam.Role": {
            "type": "object",
            "properties": {
                "Alias": {
                    "type": "string"
                },
                "Created": {
                    "type": "integer"
                },
                "Default": {
                    "type": "boolean"
                },
                "Deleted": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "Enable": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer"
                },
                "MetaData": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "Name": {
                    "type": "string"
                },
                "Rules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Schema": {
                    "type": "string"
                },
                "Updated": {
                    "type": "integer"
                }
            }
        },
        "iam.User": {
            "type": "object",
            "properties": {
                "Alias": {
                    "type": "string"
                },
                "Created": {
                    "type": "integer"
                },
                "Default": {
                    "type": "boolean"
                },
                "Deleted": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "Enable": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer"
                },
                "MetaData": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "Name": {
                    "type": "string"
                },
                "PasswordExpireAt": {
                    "type": "integer"
                },
                "Roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Rules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Schema": {
                    "type": "string"
                },
                "Updated": {
                    "type": "integer"
                }
            }
        },
        "iam.addUserRolesBody": {
            "type": "object",
            "properties": {
                "roleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "iam.authBody": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": ""
                },
                "username": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "iam.authResponseBody": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "iam.changePasswordBody": {
            "type": "object",
            "properties": {
                "NewPassword": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                }
            }
        },
        "iam.createRoleBody": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "iam.createUserBody": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "iam.listAuditLogsData": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/iam.AuditLog"
                    }
                },
                "Total": {
                    "type": "integer"
                }
            }
        },
        "iam.listRolesData": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/iam.Role"
                    }
                },
                "Total": {
                    "type": "integer"
                }
            }
        },
        "iam.listRulesBody": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Total": {
                    "type": "integer"
                }
            }
        },
        "iam.listUsersData": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/iam.User"
                    }
                },
                "Total": {
                    "type": "integer"
                }
            }
        },
        "iam.setRoleApiRulesBody": {
            "type": "object",
            "properties": {
                "RoleIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "iam.setUserRoles": {
            "type": "object",
            "properties": {
                "roleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "iam.updateRoleBody": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                }
            }
        },
        "iam.updateUserBody": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                }
            }
        },
        "jsontype.Tags": {
            "type": "object",
            "additionalProperties": {}
        },
        "omc.DataModel": {
            "type": "object",
            "properties": {
                "Created": {
                    "type": "string"
                },
                "Default": {
                    "type": "boolean"
                },
                "Deleted": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "Id": {
                    "type": "integer"
                },
                "MetaData": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "Name": {
                    "type": "string"
                },
                "ParameterPath": {
                    "type": "string"
                },
                "Parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/omc.DataModelParameter"
                    }
                },
                "ProductType": {
                    "type": "string"
                },
                "Schema": {
                    "type": "string"
                },
                "Templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/omc.DataModelTemplate"
                    }
                },
                "Updated": {
                    "type": "string"
                }
            }
        },
        "omc.DataModelParameter": {
            "type": "object",
            "properties": {
                "Created": {
                    "type": "string"
                },
                "DataModelId": {
                    "type": "integer"
                },
                "Default": {
                    "type": "boolean"
                },
                "DefaultValue": {
                    "type": "string"
                },
                "Deleted": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "Description": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer"
                },
                "MetaData": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "Name": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "Updated": {
                    "type": "string"
                },
                "Writable": {
                    "type": "boolean"
                }
            }
        },
        "omc.DataModelTemplate": {
            "type": "object",
            "properties": {
                "Created": {
                    "type": "string"
                },
                "DataModelId": {
                    "type": "integer"
                },
                "Default": {
                    "type": "boolean"
                },
                "Deleted": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "Id": {
                    "type": "integer"
                },
                "MetaData": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "Name": {
                    "type": "string"
                },
                "ParameterNames": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "Updated": {
                    "type": "string"
                }
            }
        },
        "omc.Device": {
            "type": "object",
            "properties": {
                "ActiveStatus": {
                    "type": "string"
                },
                "Created": {
                    "type": "string"
                },
                "Deleted": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "Enable": {
                    "type": "boolean"
                },
                "Group": {
                    "$ref": "#/definitions/omc.Group"
                },
                "GroupId": {
                    "type": "integer"
                },
                "Id": {
                    "type": "integer"
                },
                "LastInformTime": {
                    "type": "string"
                },
                "MetaData": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "Methods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Name": {
                    "type": "string"
                },
                "Online": {
                    "type": "boolean"
                },
                "Oui": {
                    "type": "string"
                },
                "ParameterNotifications": {
                    "$ref": "#/definitions/omc.ParameterNotifications"
                },
                "ParameterValues": {
                    "$ref": "#/definitions/omc.ParameterValues"
                },
                "ParameterWritables": {
                    "$ref": "#/definitions/omc.ParameterWritables"
                },
                "Product": {
                    "$ref": "#/definitions/omc.Product"
                },
                "ProductClass": {
                    "type": "string"
                },
                "ProductId": {
                    "type": "integer"
                },
                "ProductType": {
                    "type": "string"
                },
                "Properties": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "Schema": {
                    "type": "string"
                },
                "SerialNumber": {
                    "type": "string"
                },
                "Updated": {
                    "type": "string"
                }
            }
        },
        "omc.DeviceAlarm": {
            "type": "object",
            "properties": {
                "AdditionalInformation": {
                    "type": "string"
                },
                "AdditionalText": {
                    "type": "string"
                },
                "AlarmChangedTime": {
                    "type": "string"
                },
                "AlarmCleared": {
                    "type": "boolean"
                },
                "AlarmClearedTime": {
                    "type": "string"
                },
                "AlarmConfirmed": {
                    "type": "boolean"
                },
                "AlarmConfirmedTime": {
                    "type": "string"
                },
                "AlarmIdentifier": {
                    "type": "string"
                },
                "AlarmRaisedTime": {
                    "type": "string"
                },
                "Device": {
                    "$ref": "#/definitions/omc.Device"
                },
                "DeviceId": {
                    "type": "integer"
                },
                "EventType": {
                    "type": "string"
                },
                "ManagedObjectInstance": {
                    "type": "string"
                },
                "Oui": {
                    "type": "string"
                },
                "PerceivedSeverity": {
                    "type": "string"
                },
                "ProbableCause": {
                    "type": "string"
                },
                "ProductClass": {
                    "type": "string"
                },
                "ProductType": {
                    "type": "string"
                },
                "Schema": {
                    "type": "string"
                },
                "SerialNumber": {
                    "type": "string"
                },
                "SpecificProblem": {
                    "type": "string"
                },
                "Time": {
                    "type": "string"
                },
                "Updated": {
                    "type": "string"
                }
            }
        },
        "omc.DeviceEvent": {
            "type": "object",
            "properties": {
                "CurrentTime": {
                    "type": "string"
                },
                "Device": {
                    "$ref": "#/definitions/omc.Device"
                },
                "DeviceId": {
                    "type": "integer"
                },
                "EventType": {
                    "type": "string"
                },
                "MetaData": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "Oui": {
                    "type": "string"
                },
                "ProductClass": {
                    "type": "string"
                },
                "ProductType": {
                    "type": "string"
                },
                "Schema": {
                    "type": "string"
                },
                "SerialNumber": {
                    "type": "string"
                },
                "Time": {
                    "type": "string"
                },
                "Updated": {
                    "type": "string"
                }
            }
        },
        "omc.DeviceMethodCall": {
            "type": "object",
            "properties": {
                "CommandKey": {
                    "type": "string"
                },
                "Device": {
                    "$ref": "#/definitions/omc.Device"
                },
                "DeviceId": {
                    "type": "integer"
                },
                "FaultCode": {
                    "type": "integer"
                },
                "FaultString": {
                    "type": "string"
                },
                "MethodName": {
                    "type": "string"
                },
                "Oui": {
                    "type": "string"
                },
                "ProductClass": {
                    "type": "string"
                },
                "ProductType": {
                    "type": "string"
                },
                "RequestValues": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "ResponseValues": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "Schema": {
                    "type": "string"
                },
                "SerialNumber": {
                    "type": "string"
                },
                "State": {
                    "$ref": "#/definitions/omc.DeviceMethodCallState"
                },
                "Time": {
                    "type": "string"
                },
                "Updated": {
                    "type": "string"
                }
            }
        },
        "omc.DeviceMethodCallState": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                100
            ],
            "x-enum-varnames": [
                "DeviceMethodCallStateInit",
                "DeviceMethodCallStateRequestSend",
                "DeviceMethodCallStateResponseRecv",
                "DeviceMethodCallStateResponseTimeout",
                "DeviceMethodCallStateUnknow"
            ]
        },
        "omc.DeviceTransferLog": {
            "type": "object",
            "properties": {
                "CompleteTime": {
                    "type": "string"
                },
                "Device": {
                    "$ref": "#/definitions/omc.Device"
                },
                "DeviceId": {
                    "type": "integer"
                },
                "FaultCode": {
                    "type": "integer"
                },
                "FaultString": {
                    "type": "string"
                },
                "FileName": {
                    "type": "string"
                },
                "FileType": {
                    "type": "string"
                },
                "Firmware": {
                    "$ref": "#/definitions/omc.Firmware"
                },
                "FirmwareId": {
                    "type": "integer"
                },
                "ObjectBucket": {
                    "type": "string"
                },
                "ObjectKey": {
                    "type": "string"
                },
                "Oui": {
                    "type": "string"
                },
                "ProductClass": {
                    "type": "string"
                },
                "ProductType": {
                    "type": "string"
                },
                "S3Object": {
                    "$ref": "#/definitions/s3.S3Object"
                },
                "S3ObjectId": {
                    "type": "integer"
                },
                "Schema": {
                    "type": "string"
                },
                "SerialNumber": {
                    "type": "string"
                },
                "StartTime": {
                    "type": "string"
                },
                "Time": {
                    "type": "string"
                },
                "TransferType": {
                    "type": "string"
                },
                "Updated": {
                    "type": "string"
                }
            }
        },
        "omc.Firmware": {
            "type": "object",
            "properties": {
                "Created": {
                    "type": "string"
                },
                "Deleted": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "Id": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "ProductType": {
                    "type": "string"
                },
                "S3Object": {
                    "$ref": "#/definitions/s3.S3Object"
                },
                "S3ObjectId": {
                    "type": "integer"
                },
                "Schema": {
                    "type": "string"
                },
                "Updated": {
                    "type": "string"
                },
                "UploadTime": {
                    "type": "string"
                },
                "Uploader": {
                    "type": "string"
                },
                "Version": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/omc.Product"
                    }
                }
            }
        },
        "omc.Group": {
            "type": "object",
            "properties": {
                "Children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/omc.Group"
                    }
                },
                "Created": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer"
                },
                "MetaData": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "Name": {
                    "type": "string"
                },
                "Parent": {
                    "$ref": "#/definitions/omc.Group"
                },
                "ParentId": {
                    "type": "integer"
                },
                "Schema": {
                    "type": "string"
                },
                "Updated": {
                    "type": "string"
                }
            }
        },
        "omc.KPIMeas": {
            "type": "object",
            "properties": {
                "Created": {
                    "type": "string"
                },
                "Default": {
                    "type": "boolean"
                },
                "Deleted": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "Enable": {
                    "type": "boolean"
                },
                "Formula": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer"
                },
                "MeasTypeID": {
                    "type": "string"
                },
                "MeasTypeSet": {
                    "type": "string"
                },
                "MetaData": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "Name": {
                    "type": "string"
                },
                "ProductType": {
                    "type": "string"
                },
                "Schema": {
                    "type": "string"
                },
                "StatsType": {
                    "type": "string"
                },
                "Unit": {
                    "type": "string"
                },
                "Updated": {
                    "type": "string"
                }
            }
        },
        "omc.KPITemplate": {
            "type": "object",
            "properties": {
                "Created": {
                    "type": "string"
                },
                "Default": {
                    "type": "boolean"
                },
                "Deleted": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "Id": {
                    "type": "integer"
                },
                "MeasTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "MetaData": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "Name": {
                    "type": "string"
                },
                "PeriodicInterval": {
                    "type": "integer"
                },
                "ProductType": {
                    "type": "string"
                },
                "Schema": {
                    "type": "string"
                },
                "SelectIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "SelectType": {
                    "type": "string"
                },
                "Updated": {
                    "type": "string"
                }
            }
        },
        "omc.ParameterNotifications": {
            "type": "object",
            "additionalProperties": {
                "type": "integer"
            }
        },
        "omc.ParameterValues": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "omc.ParameterWritables": {
            "type": "object",
            "additionalProperties": {
                "type": "boolean"
            }
        },
        "omc.Product": {
            "type": "object",
            "properties": {
                "Created": {
                    "type": "string"
                },
                "Default": {
                    "type": "boolean"
                },
                "Deleted": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "Enable": {
                    "type": "boolean"
                },
                "Firmwares": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/omc.Firmware"
                    }
                },
                "Id": {
                    "type": "integer"
                },
                "Manufacturer": {
                    "type": "string"
                },
                "MetaData": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "ModelName": {
                    "type": "string"
                },
                "Oui": {
                    "type": "string"
                },
                "ParameterPath": {
                    "type": "string"
                },
                "PerformanceValueDefines": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "ProductClass": {
                    "type": "string"
                },
                "ProductType": {
                    "type": "string"
                },
                "Schema": {
                    "type": "string"
                },
                "SupportedAlarms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/omc.ProductSupportedAlarm"
                    }
                },
                "Updated": {
                    "type": "string"
                }
            }
        },
        "omc.ProductSupportedAlarm": {
            "type": "object",
            "properties": {
                "AlarmIdentifier": {
                    "type": "string"
                },
                "Created": {
                    "type": "string"
                },
                "EventType": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer"
                },
                "Oui": {
                    "type": "string"
                },
                "PerceivedSeverity": {
                    "type": "string"
                },
                "ProbableCause": {
                    "type": "string"
                },
                "Product": {
                    "$ref": "#/definitions/omc.Product"
                },
                "ProductClass": {
                    "type": "string"
                },
                "ProductId": {
                    "type": "integer"
                },
                "ProductType": {
                    "type": "string"
                },
                "Schema": {
                    "type": "string"
                },
                "SerialNumber": {
                    "type": "string"
                },
                "SpecificProblem": {
                    "type": "string"
                },
                "Updated": {
                    "type": "string"
                }
            }
        },
        "omc.Task": {
            "type": "object",
            "properties": {
                "Created": {
                    "type": "string"
                },
                "Creater": {
                    "type": "string"
                },
                "Default": {
                    "type": "boolean"
                },
                "Deleted": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "DeviceIds": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "Enable": {
                    "type": "boolean"
                },
                "ExecEndTime": {
                    "type": "string"
                },
                "ExecInterval": {
                    "type": "integer"
                },
                "ExecLastTime": {
                    "type": "string"
                },
                "ExecMode": {
                    "$ref": "#/definitions/omc.TaskExecMode"
                },
                "ExecNextTime": {
                    "type": "string"
                },
                "ExecProcess": {
                    "type": "integer"
                },
                "ExecRate": {
                    "type": "integer"
                },
                "ExecStartTime": {
                    "type": "string"
                },
                "ExecTimes": {
                    "type": "integer"
                },
                "Id": {
                    "type": "integer"
                },
                "MetaData": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "RetryInterval": {
                    "type": "integer"
                },
                "RetryTimes": {
                    "type": "integer"
                },
                "Schema": {
                    "type": "string"
                },
                "TaskName": {
                    "type": "string"
                },
                "TaskStatus": {
                    "$ref": "#/definitions/omc.TaskStatus"
                },
                "TaskType": {
                    "type": "string"
                },
                "Updated": {
                    "type": "string"
                }
            }
        },
        "omc.TaskDeviceLog": {
            "type": "object",
            "properties": {
                "Code": {
                    "type": "integer"
                },
                "Device": {
                    "$ref": "#/definitions/omc.Device"
                },
                "DeviceId": {
                    "type": "integer"
                },
                "DeviceIds": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "EndTime": {
                    "type": "string"
                },
                "ExecMode": {
                    "type": "integer"
                },
                "Info": {
                    "type": "string"
                },
                "Schema": {
                    "type": "string"
                },
                "StartTime": {
                    "type": "string"
                },
                "Task": {
                    "$ref": "#/definitions/omc.Task"
                },
                "TaskId": {
                    "type": "integer"
                },
                "TaskName": {
                    "type": "string"
                },
                "TaskType": {
                    "type": "string"
                },
                "Time": {
                    "type": "string"
                },
                "Updated": {
                    "type": "string"
                }
            }
        },
        "omc.TaskExecMode": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-varnames": [
                "TaskExecModeImmediately",
                "TaskExecModeSchedule"
            ]
        },
        "omc.TaskStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-varnames": [
                "TaskStatusInit",
                "TaskStatusWaiting",
                "TaskStatusRunning",
                "TaskStatusFinish",
                "TaskStatusCancel"
            ]
        },
        "omc.addDeviceObejectBody": {
            "type": "object",
            "properties": {
                "ObjectName": {
                    "type": "string"
                },
                "ParameterKey": {
                    "type": "string"
                }
            }
        },
        "omc.createDataModelBody": {
            "type": "object",
            "properties": {
                "metaData": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "name": {
                    "type": "string"
                },
                "parameterPath": {
                    "type": "string"
                },
                "productType": {
                    "type": "string"
                }
            }
        },
        "omc.createDataModelParameterBody": {
            "type": "object",
            "properties": {
                "defaultValue": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "metaData": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "writable": {
                    "type": "boolean"
                }
            }
        },
        "omc.createDataModelTemplateBody": {
            "type": "object",
            "properties": {
                "metaData": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "name": {
                    "type": "string"
                },
                "parameterNames": {
                    "$ref": "#/definitions/jsontype.Tags"
                }
            }
        },
        "omc.createDeviceBody": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Oui": {
                    "type": "string"
                },
                "ProductClass": {
                    "type": "string"
                },
                "SerailNumber": {
                    "type": "string"
                }
            }
        },
        "omc.createGroupBody": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "parentID": {
                    "type": "integer"
                }
            }
        },
        "omc.createKPIMeasureBody": {
            "type": "object",
            "properties": {
                "formula": {
                    "type": "string"
                },
                "measTypeID": {
                    "type": "string"
                },
                "measTypeSet": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "productType": {
                    "type": "string"
                },
                "statsType": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "omc.createKPITemplateBody": {
            "type": "object",
            "properties": {
                "measTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "periodicInterval": {
                    "type": "integer"
                },
                "selectIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "selectType": {
                    "type": "string"
                }
            }
        },
        "omc.createProductBody": {
            "type": "object",
            "properties": {
                "manufacturer": {
                    "type": "string"
                },
                "modelName": {
                    "type": "string"
                },
                "oui": {
                    "type": "string"
                },
                "productClass": {
                    "type": "string"
                }
            }
        },
        "omc.createTaskBody": {
            "type": "object",
            "properties": {
                "Creater": {
                    "type": "string"
                },
                "DeviceIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "ExecEndTime": {
                    "type": "string"
                },
                "ExecInterval": {
                    "type": "integer"
                },
                "ExecMode": {
                    "$ref": "#/definitions/omc.TaskExecMode"
                },
                "ExecProcess": {
                    "type": "integer"
                },
                "ExecStartTime": {
                    "type": "string"
                },
                "ExecTimes": {
                    "type": "integer"
                },
                "MetaData": {
                    "$ref": "#/definitions/jsontype.Tags"
                },
                "ParameterNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "TaskName": {
                    "type": "string"
                },
                "TaskStatus": {
                    "$ref": "#/definitions/omc.TaskStatus"
                },
                "TaskType": {
                    "type": "string"
                }
            }
        },
        "omc.deleteDeviceObejectBody": {
            "type": "object",
            "properties": {
                "ObjectName": {
                    "type": "string"
                },
                "ParameterKey": {
                    "type": "string"
                }
            }
        },
        "omc.getDeviceParameterNamesBody": {
            "type": "object",
            "properties": {
                "NextLevel": {
                    "type": "boolean"
                },
                "ParameterPath": {
                    "type": "string"
                }
            }
        },
        "omc.getDeviceParameterValuesBody": {
            "type": "object",
            "properties": {
                "Names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "omc.listDataModelData": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/omc.DataModel"
                    }
                },
                "Total": {
                    "type": "integer"
                }
            }
        },
        "omc.listDeletedDevicesData": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/omc.Device"
                    }
                },
                "Total": {
                    "type": "integer"
                }
            }
        },
        "omc.listDeletedProductsData": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/omc.Product"
                    }
                },
                "Total": {
                    "type": "integer"
                }
            }
        },
        "omc.listDeviceAlarmsData": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/omc.DeviceAlarm"
                    }
                },
                "Total": {
                    "type": "integer"
                }
            }
        },
        "omc.listDeviceEventsData": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/omc.DeviceEvent"
                    }
                },
                "Total": {
                    "type": "integer"
                }
            }
        },
        "omc.listDeviceMethodCallsData": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/omc.DeviceMethodCall"
                    }
                },
                "Total": {
                    "type": "integer"
                }
            }
        },
        "omc.listDeviceTransferLogsData": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/omc.DeviceTransferLog"
                    }
                },
                "Total": {
                    "type": "integer"
                }
            }
        },
        "omc.listDevicesData": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/omc.Device"
                    }
                },
                "Total": {
                    "type": "integer"
                }
            }
        },
        "omc.listFirmwaresData": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/omc.Firmware"
                    }
                },
                "Total": {
                    "type": "integer"
                }
            }
        },
        "omc.listKPIMeasuresData": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/omc.KPIMeas"
                    }
                },
                "Total": {
                    "type": "integer"
                }
            }
        },
        "omc.listKPITemplateRecordsData": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {}
                    }
                },
                "Total": {
                    "type": "integer"
                }
            }
        },
        "omc.listKPITemplatesData": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/omc.KPITemplate"
                    }
                },
                "Total": {
                    "type": "integer"
                }
            }
        },
        "omc.listProductsData": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/omc.Product"
                    }
                },
                "Total": {
                    "type": "integer"
                }
            }
        },
        "omc.listTaskDeviceLogsData": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/omc.TaskDeviceLog"
                    }
                },
                "Total": {
                    "type": "integer"
                }
            }
        },
        "omc.listTasksData": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/omc.Task"
                    }
                },
                "Total": {
                    "type": "integer"
                }
            }
        },
        "omc.setDeviceParameterValuesBody": {
            "type": "object",
            "properties": {
                "Values": {
                    "type": "object",
                    "additionalProperties": {}
                }
            }
        },
        "omc.setFirmwareProductsBody": {
            "type": "object",
            "properties": {
                "ModelNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "omc.setGroupForDeviceBody": {
            "type": "object",
            "properties": {
                "GroupId": {
                    "type": "integer"
                }
            }
        },
        "omc.setGroupParentBody": {
            "type": "object",
            "properties": {
                "parentID": {
                    "type": "integer"
                }
            }
        },
        "omc.updateDeviceInfoBody": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                }
            }
        },
        "omc.updateGroupInfoBody": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "omc.updateKPIMeasureInfoBody": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "omc.updateKPITemplateBody": {
            "type": "object",
            "properties": {
                "measTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "periodicInterval": {
                    "type": "integer"
                },
                "selectIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "selectType": {
                    "type": "string"
                }
            }
        },
        "omc.updateProductInfoBody": {
            "type": "object",
            "properties": {
                "manufacturer": {
                    "type": "string"
                }
            }
        },
        "omc.upgradeDeviceBody": {
            "type": "object",
            "properties": {
                "DelaySeconds": {
                    "type": "integer"
                },
                "FirmwareID": {
                    "type": "integer"
                }
            }
        },
        "omc.uploadDeviceFileBody": {
            "type": "object",
            "properties": {
                "DelaySeconds": {
                    "type": "integer"
                },
                "FileType": {
                    "description": "Url          string `json:\"Url\"`\nUsername     string `json:\"Username\"`\nPassword     string `json:\"Password\"`",
                    "type": "string"
                }
            }
        },
        "s3.S3Object": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "type": "string"
                },
                "Created": {
                    "type": "string"
                },
                "Deleted": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "DownloadUrl": {
                    "type": "string"
                },
                "FileName": {
                    "type": "string"
                },
                "FileSize": {
                    "type": "integer"
                },
                "Id": {
                    "type": "integer"
                },
                "Key": {
                    "type": "string"
                },
                "MetaData": {
                    "$ref": "#/definitions/s3.Tags"
                },
                "Schema": {
                    "type": "string"
                },
                "SignMethod": {
                    "type": "string"
                },
                "Signature": {
                    "type": "string"
                },
                "Updated": {
                    "type": "string"
                }
            }
        },
        "s3.Tags": {
            "type": "object",
            "additionalProperties": {}
        },
        "s3.listS3ObjectsData": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/s3.S3Object"
                    }
                },
                "Total": {
                    "type": "integer"
                }
            }
        },
        "server.listRoutesBody": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/iam.ApiRule"
                    }
                },
                "Total": {
                    "type": "integer"
                }
            }
        },
        "system.systemInfoData": {
            "type": "object",
            "properties": {
                "Build": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Version": {
                    "type": "string"
                }
            }
        },
        "system.systemTimeData": {
            "type": "object",
            "properties": {
                "Current": {
                    "type": "integer"
                }
            }
        },
        "tsdb.TSPoint": {
            "type": "object",
            "additionalProperties": {}
        },
        "tsdb.TSQuery": {
            "type": "object",
            "properties": {
                "Format": {
                    "type": "string"
                },
                "GroupBy": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Id": {
                    "type": "string"
                },
                "Interval": {
                    "type": "number"
                },
                "Limit": {
                    "type": "integer"
                },
                "Offset": {
                    "type": "integer"
                },
                "OrderBy": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Reverse": {
                    "type": "boolean"
                },
                "Search": {
                    "type": "string"
                },
                "Select": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tsdb.TSQuerySelect"
                    }
                },
                "Source": {
                    "type": "string"
                }
            }
        },
        "tsdb.TSQueryCommand": {
            "type": "object",
            "properties": {
                "From": {
                    "type": "integer"
                },
                "Query": {
                    "$ref": "#/definitions/tsdb.TSQuery"
                },
                "TimeZone": {
                    "type": "string"
                },
                "To": {
                    "type": "integer"
                }
            }
        },
        "tsdb.TSQuerySelect": {
            "type": "object",
            "properties": {
                "Func": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Source": {
                    "type": "string"
                }
            }
        },
        "tsdb.TSResult": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tsdb.TSSeries"
                    }
                },
                "From": {
                    "type": "integer"
                },
                "To": {
                    "type": "integer"
                }
            }
        },
        "tsdb.TSSeries": {
            "type": "object",
            "properties": {
                "GroupBy": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "Points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tsdb.TSPoint"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}